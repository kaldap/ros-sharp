/*
Â© Cutter Systems spol. s r.o., 2018
Author: Petr Kalandra (kalandra@cutter.cz)

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at
<http://www.apache.org/licenses/LICENSE-2.0>.
Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

using Newtonsoft.Json;
using System.Collections.Generic;
using RosSharp.RosBridgeClient.Messages.Standard;

namespace RosSharp.RosBridgeClient.Messages.MoveIt
{
	public class PlaceGoal
	{
		[JsonIgnore]
		public const string RosMessageName = "moveit_msgs/PlaceGoal";

		// ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======
		// An action for placing an object
		// which group to be used to plan for grasping
		public string group_name;

		// the name that the attached object to place
		public string attached_object_name;

		// a list of possible transformations for placing the object
		public List<PlaceLocation> place_locations;

		// if the user prefers setting the eef pose (same as in pick) rather than
		// the location of an end effector, this flag should be set to true
		public bool place_eef;

		// the name that the support surface (e.g. table) has in the collision world
		// can be left empty if no name is available
		public string support_surface_name;

		// whether collisions between the gripper and the support surface should be acceptable
		// during move from pre-place to place and during retreat. Collisions when moving to the
		// pre-place location are still not allowed even if this is set to true.
		public bool allow_gripper_support_collision;

		// Optional constraints to be imposed on every point in the motion plan
		public Constraints path_constraints;

		// The name of the motion planner to use. If no name is specified,
		// a default motion planner will be used
		public string planner_id;

		// an optional list of obstacles that we have semantic information about
		// and that can be touched/pushed/moved in the course of grasping;
		// CAREFUL: If the object name 'all' is used, collisions with all objects are disabled during the approach & lift.
		public List<string> allowed_touch_objects;

		// The maximum amount of time the motion planner is allowed to plan for
		public double allowed_planning_time;

		// Planning options
		public PlanningOptions planning_options;


		public PlaceGoal()
		{
			group_name = string.Empty;
			attached_object_name = string.Empty;
			place_locations = new List<PlaceLocation>();
			place_eef = new bool();
			support_surface_name = string.Empty;
			allow_gripper_support_collision = new bool();
			path_constraints = new Constraints();
			planner_id = string.Empty;
			allowed_touch_objects = new List<string>();
			planning_options = new PlanningOptions();
		}
	}
}
