/*
Â© Cutter Systems spol. s r.o., 2018
Author: Petr Kalandra (kalandra@cutter.cz)

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at
<http://www.apache.org/licenses/LICENSE-2.0>.
Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

using Newtonsoft.Json;
using System.Collections.Generic;
using RosSharp.RosBridgeClient.Messages.Standard;

namespace RosSharp.RosBridgeClient.Messages.Manipulation
{
	public class GraspPlanningGoal
	{
		[JsonIgnore]
		public const string RosMessageName = "manipulation_msgs/GraspPlanningGoal";

		// ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======
		// Requests that grasp planning be performed on the object to be grasped
		// returns a list of grasps to be tested and executed
		// the arm being used
		public string arm_name;

		// the object to be grasped
		public GraspableObject target;

		// the name that the target object has in the collision environment
		// can be left empty if no name is available
		public string collision_object_name;

		// the name that the support surface (e.g. table) has in the collision map
		// can be left empty if no name is available
		public string collision_support_surface_name;

		// an optional list of grasps to be evaluated by the planner
		public List<Grasp> grasps_to_evaluate;

		// an optional list of obstacles that we have semantic information about
		// and that can be moved in the course of grasping
		public List<GraspableObject> movable_obstacles;


		public GraspPlanningGoal()
		{
			arm_name = string.Empty;
			target = new GraspableObject();
			collision_object_name = string.Empty;
			collision_support_surface_name = string.Empty;
			grasps_to_evaluate = new List<Grasp>();
			movable_obstacles = new List<GraspableObject>();
		}
	}
}
